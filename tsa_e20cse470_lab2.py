# -*- coding: utf-8 -*-
"""TSA_E20CSE470_Lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bxMxnPWpxDrna1qkARfxUMI2GifaU1Ib
"""

#Harshita Jain
#E20cse470
#EB31

pip install statsmodels

import pandas as pd
import numpy as np
from statsmodels.tsa.seasonal import seasonal_decompose

df=pd.read_csv("AAPL.csv")

df.head()

df.set_index('Date',inplace=True)
df.index=pd.to_datetime(df.index)

df.dropna(inplace=True)
df.plot

result=seasonal_decompose(df['Open'],model='multiplicable',period=12)
result.seasonal.plot()
result.trend.plot()
result.plot()

pip install plotly

from statsmodels.tsa.stattools import adfuller
import plotly.express as px

df=pd.read_csv("AAPL.csv")
#df.set_index('Date',inplace=True)
df.Date=pd.to_datetime(df.Date)

series = df.loc[:, 'Open'].values
fig = px.line(df, x='Date', y='Open')
fig.show()

result = adfuller(series, autolag='AIC')
print(f'ADF Statistic: {result[0]}')
print(f'n_lags: {result[1]}')
print(f'p-values: {result[1]}')
for key, value in result[4].items():
  print('Critial Values:')
  print(f'{key},{value}')

from statsmodels.tsa.stattools import kpss

kpsstest= kpss(series, regression='c')

kpss_output=pd.Series(kpsstest[0:3], index=['Test Statistical','p-value','Lags Used'])
for key,value in kpsstest[3].items():
  kpss_output['Critical Value (%s)' %key]=value
print(kpss_output)

